// src/ai/flows/generate-first-message.ts
'use server';

/**
 * @fileOverview Generates a personalized welcome message for a new user based on their initial prompt.
 *
 * - generateFirstMessage - A function that generates the personalized welcome message.
 * - GenerateFirstMessageInput - The input type for the generateFirstMessage function.
 * - GenerateFirstMessageOutput - The return type for the generateFirstMessage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateFirstMessageInputSchema = z.object({
  userPrompt: z.string().describe('The user\u2019s initial prompt or message.'),
});
export type GenerateFirstMessageInput = z.infer<typeof GenerateFirstMessageInputSchema>;

const GenerateFirstMessageOutputSchema = z.object({
  welcomeMessage: z.string().describe('The personalized welcome message generated by the AI.'),
});
export type GenerateFirstMessageOutput = z.infer<typeof GenerateFirstMessageOutputSchema>;

export async function generateFirstMessage(input: GenerateFirstMessageInput): Promise<GenerateFirstMessageOutput> {
  return generateFirstMessageFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateFirstMessagePrompt',
  input: {schema: GenerateFirstMessageInputSchema},
  output: {schema: GenerateFirstMessageOutputSchema},
  prompt: `You are an empathetic and helpful AI assistant. A new user has just sent their first message.

  Generate a personalized welcome message that acknowledges their initial message and offers assistance.

  User's Initial Message: {{{userPrompt}}}

  Welcome Message:`,
});

const generateFirstMessageFlow = ai.defineFlow(
  {
    name: 'generateFirstMessageFlow',
    inputSchema: GenerateFirstMessageInputSchema,
    outputSchema: GenerateFirstMessageOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
